'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GLOB_PATTERN = undefined;

let readScreenshots = (() => {
  var _ref = _asyncToGenerator(function* ({ cwd, ignore = [] }) {
    const matches = yield (0, _globPromise2.default)(GLOB_PATTERN, {
      cwd,
      ignore,
      nodir: true
    });

    return matches.map(function (match) {
      return {
        name: match,
        filename: _path2.default.resolve(cwd, match)
      };
    });
  });

  return function readScreenshots(_x) {
    return _ref.apply(this, arguments);
  };
})();

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _globPromise = require('glob-promise');

var _globPromise2 = _interopRequireDefault(_globPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const GLOB_PATTERN = exports.GLOB_PATTERN = '**/*.{png,jpg}';

exports.default = readScreenshots;